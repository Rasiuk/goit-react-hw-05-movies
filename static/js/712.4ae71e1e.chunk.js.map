{"version":3,"file":"static/js/712.4ae71e1e.chunk.js","mappings":"iPACaA,EAAKC,EAAAA,GAAAA,GAAH,iGAMFC,EAAYD,EAAAA,GAAAA,GAAH,2F,SCJTE,EAAS,SAAC,GAAkD,IAAD,IAA/CC,MAASC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,aACjD,OACE,UAACL,EAAD,YACE,gBACEM,IACED,EAAY,yCAC0BA,GAD1B,oIAIdE,IAAKJ,EACLK,MAAM,QACNC,OAAO,WAET,wBAAKN,KACL,uCAAeC,OAGpB,ECED,EAjBa,WACX,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAOR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQH,GAAII,MAAK,SAAAC,GACfN,EAAUM,EAAKA,KAAKC,KACrB,GACF,GAAE,CAACN,KAGF,SAACf,EAAD,UACGa,EAAOS,KAAI,SAAAlB,GACV,OAAO,SAACD,EAAD,CAAuBC,MAAOA,GAAjBA,EAAMW,GAC3B,KAGN,C,+LCpBKQ,EAAQ,6BACRC,EAAO,mCAEAC,EAAe,mCAAG,uGAEdC,EAAAA,EAAAA,IAAA,UACRH,EADQ,uCAC+BC,EAD/B,MAFc,8EAMrB,IAAIG,MAAJ,MANqB,wDAAH,qDAWfC,EAAY,mCAAG,WAAMC,GAAN,0FAEXH,EAAAA,EAAAA,IAAA,UACRH,EADQ,mCAC2BC,EAD3B,4DACsFK,IAH3E,8EAMlB,IAAIF,MAAJ,MANkB,wDAAH,sDAUZG,EAAa,mCAAG,WAAMf,GAAN,0FAEZW,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYR,EADZ,oBAC0BS,EAD1B,oBAFY,8EAMnB,IAAIG,MAAJ,MANmB,wDAAH,sDAUbT,EAAO,mCAAG,WAAMH,GAAN,0FAENW,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYR,EADZ,4BACkCS,EADlC,oBAFM,gIAAH,sDAOPO,EAAU,mCAAG,WAAMhB,GAAN,0FAETW,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYR,EADZ,4BACkCS,EADlC,oBAFS,gIAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/ActorsList.js","components/Cast/Cast.js","servises/Fetchs.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Ul = styled.ul`\n  gap: 24px;\n  flex-wrap: wrap;\n  display: flex;\n  list-style: none;\n`;\nexport const ActorCard = styled.li`\n  width: 200px;\n  border: 2px solid #eee;\n  border-radius: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { ActorCard } from './Cast.styled';\n\nexport const Actors = ({ actor: { name, character, profile_path } }) => {\n  return (\n    <ActorCard>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n            : `https://ifpo.org.uk/wp-content/uploads/2020/10/cropped-9-93879_computer-icons-user-image-person-silhouette-user-silhouettes-4.png`\n        }\n        alt={name}\n        width=\"200px\"\n        height=\"300px\"\n      />\n      <h3>{name}</h3>\n      <p>Character: {character}</p>\n    </ActorCard>\n  );\n};\nActors.propTypes = {\n  actor: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'servises/Fetchs';\nimport { Actors } from './ActorsList';\nimport { Ul } from './Cast.styled';\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    getCast(id).then(data => {\n      setActors(data.data.cast);\n    });\n  }, [id]);\n\n  return (\n    <Ul>\n      {actors.map(actor => {\n        return <Actors key={actor.id} actor={actor} />;\n      })}\n    </Ul>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = `https://api.themoviedb.org`;\nconst API_KEY = `203660b5f38f4dd17691a30662d2c12a`;\n//api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport const getPopularFilms = async () => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/trending/all/day?api_key=${API_KEY} `\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n//api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const searchMovies = async searchName => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchName}`\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const getDetailFilm = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n//api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const getCast = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {}\n};\nexport const getReviews = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {}\n};\n"],"names":["Ul","styled","ActorCard","Actors","actor","name","character","profile_path","src","alt","width","height","useState","actors","setActors","id","useParams","useEffect","getCast","then","data","cast","map","BASE_URL","API_KEY","getPopularFilms","axios","Error","searchMovies","searchName","getDetailFilm","getReviews"],"sourceRoot":""}