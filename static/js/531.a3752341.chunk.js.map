{"version":3,"file":"static/js/531.a3752341.chunk.js","mappings":"iPACaA,EAAOC,EAAAA,GAAAA,GAAH,6CAGJC,EAAOD,EAAAA,GAAAA,GAAH,kG,SCDJE,EAAa,SAAC,GAAqC,IAAD,IAAlCC,OAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,QAC7C,OACE,UAACJ,EAAD,YACE,qCAAaG,MACb,uBAAIC,MAGT,ECeD,EAnBe,WACb,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAOR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GAAII,MAAK,SAAAC,GAClBN,EAAUM,EAAKA,KAAKC,QACrB,GACF,GAAE,CAACN,KAGF,SAACV,EAAD,UACsB,IAAnBQ,EAAQS,OACLT,EAAQU,KAAI,SAAAd,GACV,OAAO,SAACD,EAAD,CAA4BC,OAAQA,GAAnBA,EAAOM,GAChC,IACD,yBAGT,C,+LCvBKS,EAAQ,6BACRC,EAAO,mCAEAC,EAAe,mCAAG,uGAEdC,EAAAA,EAAAA,IAAA,UACRH,EADQ,uCAC+BC,EAD/B,MAFc,8EAMrB,IAAIG,MAAJ,MANqB,wDAAH,qDAWfC,EAAY,mCAAG,WAAMC,GAAN,0FAEXH,EAAAA,EAAAA,IAAA,UACRH,EADQ,mCAC2BC,EAD3B,4DACsFK,IAH3E,8EAMlB,IAAIF,MAAJ,MANkB,wDAAH,sDAUZG,EAAa,mCAAG,WAAMhB,GAAN,0FAEZY,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYT,EADZ,oBAC0BU,EAD1B,oBAFY,8EAMnB,IAAIG,MAAJ,MANmB,wDAAH,sDAUbI,EAAO,mCAAG,WAAMjB,GAAN,0FAENY,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYT,EADZ,4BACkCU,EADlC,oBAFM,gIAAH,sDAOPP,EAAU,mCAAG,WAAMH,GAAN,0FAETY,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYT,EADZ,4BACkCU,EADlC,oBAFS,gIAAH,qD","sources":["components/Review/Review.styled.js","components/Review/ReviewItem.js","components/Review/Review.js","servises/Fetchs.js"],"sourcesContent":["import styled from 'styled-components';\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const Item = styled.li`\n  border: 2px solid #eee;\n  border-radius: 4px;\n  margin-bottom: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './Review.styled';\n\nexport const ReviewItem = ({ review: { author, content } }) => {\n  return (\n    <Item>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </Item>\n  );\n};\nReviewItem.propTypes = {\n  review: PropTypes.shape({\n    author: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'servises/Fetchs';\nimport { List } from './Review.styled';\nimport { ReviewItem } from './ReviewItem';\n\nconst Review = () => {\n  const [reviews, setReview] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    getReviews(id).then(data => {\n      setReview(data.data.results);\n    });\n  }, [id]);\n\n  return (\n    <List>\n      {reviews.length !== 0\n        ? reviews.map(review => {\n            return <ReviewItem key={review.id} review={review} />;\n          })\n        : 'sory not have reviews'}\n    </List>\n  );\n};\nexport default Review;\n","import axios from 'axios';\nconst BASE_URL = `https://api.themoviedb.org`;\nconst API_KEY = `203660b5f38f4dd17691a30662d2c12a`;\n//api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport const getPopularFilms = async () => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/trending/all/day?api_key=${API_KEY} `\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n//api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const searchMovies = async searchName => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchName}`\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const getDetailFilm = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n//api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const getCast = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {}\n};\nexport const getReviews = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {}\n};\n"],"names":["List","styled","Item","ReviewItem","review","author","content","useState","reviews","setReview","id","useParams","useEffect","getReviews","then","data","results","length","map","BASE_URL","API_KEY","getPopularFilms","axios","Error","searchMovies","searchName","getDetailFilm","getCast"],"sourceRoot":""}