{"version":3,"file":"static/js/616.5bd5e0a2.chunk.js","mappings":"0PAEaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iOAWTE,EAAYF,EAAAA,GAAAA,IAAH,qEAITG,EAAQH,EAAAA,GAAAA,IAAH,yCAGLI,EAAWJ,EAAAA,GAAAA,IAAH,kEAIRK,EAAWL,EAAAA,GAAAA,IAAH,0CAGRM,EAAKN,EAAAA,GAAAA,GAAH,kDAGFO,GAAeP,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0F,SChBZQ,EAAc,SAAC,GAUrB,IAAD,IATJC,MACEC,EAQE,EARFA,eACAC,EAOE,EAPFA,SACAC,EAME,EANFA,aACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,OACAC,EAGE,EAHFA,YAEFC,EACI,EADJA,KAEA,OACE,UAACd,EAAD,YACE,UAACG,EAAD,YACE,UAACD,EAAD,YACE,SAACL,EAAD,CAAWkB,GAAID,EAAf,mBACA,SAACb,EAAD,CACEe,IACEH,EAAW,yCAC2BA,GAClC,4HAENI,IAAI,SAGR,4BACE,0BACGT,EADH,MACsBG,EADtB,QAGA,yCAAiBD,EAAjB,QACA,qCALF,KAKoB,uBAAID,KACtB,qCACA,8BAAIG,QAAJ,IAAIA,OAAJ,EAAIA,EAAQM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAG9C,4BACE,UAACjB,EAAD,YACE,mDACA,yBACE,SAACC,EAAD,CAAcU,GAAG,OAAjB,sBAEF,yBACE,SAACV,EAAD,CAAcU,GAAG,SAAjB,2BAGJ,SAAC,EAAAO,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,E,SCvCD,EAtBoB,WAAO,IAAD,MAExB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOjB,EAAP,KAAckB,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,8BAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAAzB,QAAgC,WAOlE,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcT,GAAIU,MAAK,SAAAC,GACrBZ,EAASY,EAAKA,KACf,GACF,GAAE,CAACX,IACCnB,GAIH,0BACE,SAACD,EAAD,CAAaC,MAAOA,EAAOO,KAAMgB,EAAoBQ,aAJhD,uCAOV,C,+LCxBKC,EAAQ,6BACRC,EAAO,mCAEAC,EAAe,mCAAG,uGAEdC,EAAAA,EAAAA,IAAA,UACRH,EADQ,uCAC+BC,EAD/B,MAFc,8EAMrB,IAAIG,MAAJ,MANqB,wDAAH,qDAWfC,EAAY,mCAAG,WAAMC,GAAN,0FAEXH,EAAAA,EAAAA,IAAA,UACRH,EADQ,mCAC2BC,EAD3B,4DACsFK,IAH3E,8EAMlB,IAAIF,MAAJ,MANkB,wDAAH,sDAUZR,EAAa,mCAAG,WAAMT,GAAN,0FAEZgB,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYb,EADZ,oBAC0Bc,EAD1B,oBAFY,8EAMnB,IAAIG,MAAJ,MANmB,wDAAH,sDAUbG,EAAO,mCAAG,WAAMpB,GAAN,0FAENgB,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYb,EADZ,4BACkCc,EADlC,oBAFM,gIAAH,sDAOPO,EAAU,mCAAG,WAAMrB,GAAN,0FAETgB,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACYb,EADZ,4BACkCc,EADlC,oBAFS,gIAAH,qD","sources":["components/FilmDetails/FilmDetails.styled.js","components/FilmDetails/FilmDetails.js","pages/MovieDetail.js","servises/Fetchs.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const LinkStyle = styled(Link)`\n  display: block;\n  padding: 8px 16px;\n  margin-bottom: 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  color: white;\n  background-color: orangered;\n`;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Image = styled.img`\n  width: 300px;\n`;\nexport const ImageBox = styled.div`\n  display: block;\n  margin-right: 48px;\n`;\nexport const MainInfo = styled.div`\n  display: flex;\n`;\nexport const Ul = styled.ul`\n  list-style-type: none;\n`;\nexport const LinkMoreInfo = styled(Link)`\n  display: block;\n  font-weight: 700;\n  text-decoration: none;\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Container,\n  Image,\n  ImageBox,\n  LinkMoreInfo,\n  LinkStyle,\n  MainInfo,\n  Ul,\n} from './FilmDetails.styled';\n\nexport const FilmDetails = ({\n  movie: {\n    original_title,\n    overview,\n    vote_average,\n    release_date,\n    genres,\n    poster_path,\n  },\n  back,\n}) => {\n  return (\n    <Container>\n      <MainInfo>\n        <ImageBox>\n          <LinkStyle to={back}>back</LinkStyle>\n          <Image\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : 'https://img.lovepik.com/free-png/20211201/lovepik-hand-painted-popcorn-cola-and-3d-glasses-png-image_401247856_wh1200.png'\n            }\n            alt=\"\"\n          />\n        </ImageBox>\n        <div>\n          <h2>\n            {original_title} ( {release_date})\n          </h2>\n          <p>User scrore: {vote_average}%</p>\n          <h3>Overview</h3> <p>{overview}</p>\n          <h3>Genres:</h3>\n          <p>{genres?.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </MainInfo>\n      <div>\n        <Ul>\n          <h3>Addiional information</h3>\n          <li>\n            <LinkMoreInfo to=\"cast\"> Cast</LinkMoreInfo>\n          </li>\n          <li>\n            <LinkMoreInfo to=\"review\"> Review</LinkMoreInfo>\n          </li>\n        </Ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </Container>\n  );\n};\nFilmDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n","import { FilmDetails } from 'components/FilmDetails/FilmDetails';\nimport { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getDetailFilm } from 'servises/Fetchs';\nconst MovieDetail = () => {\n  // console.log(location);\n  const [movie, setMovie] = useState([]);\n\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/' ?? '/movies');\n\n  useEffect(() => {\n    getDetailFilm(id).then(data => {\n      setMovie(data.data);\n    });\n  }, [id]);\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <FilmDetails movie={movie} back={backLinkLocationRef.current} />\n    </div>\n  );\n};\nexport default MovieDetail;\n","import axios from 'axios';\nconst BASE_URL = `https://api.themoviedb.org`;\nconst API_KEY = `203660b5f38f4dd17691a30662d2c12a`;\n//api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport const getPopularFilms = async () => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/trending/all/day?api_key=${API_KEY} `\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n//api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\nexport const searchMovies = async searchName => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchName}`\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n//api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const getDetailFilm = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n//api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\nexport const getCast = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {}\n};\nexport const getReviews = async id => {\n  try {\n    return await axios.get(\n      `${BASE_URL}/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (error) {}\n};\n"],"names":["LinkStyle","styled","Link","Container","Image","ImageBox","MainInfo","Ul","LinkMoreInfo","FilmDetails","movie","original_title","overview","vote_average","release_date","genres","poster_path","back","to","src","alt","map","genre","name","join","Suspense","fallback","useState","setMovie","id","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getDetailFilm","then","data","current","BASE_URL","API_KEY","getPopularFilms","axios","Error","searchMovies","searchName","getCast","getReviews"],"sourceRoot":""}